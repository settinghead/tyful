// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 3/28/12 3:00 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
using Com.Settinghead.Wexpression.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Runtime.CompilerServices;
using PureMVC.Patterns;
using PureMVC.Interfaces;
using Com.Settinghead.Wexpression.Client.View.Components;

namespace Com.Settinghead.Wexpression.Client.View
{


    public class ApplicationMediator : Mediator
    {
        public const string NAME = "ApplicationMediator";

        public ApplicationMediator(Object viewComponent = null)
            : base(NAME, viewComponent)
        {
           
        }

        public void OnRegister()
        {

        }

        override public IList<string> ListNotificationInterests()
        {
            return new List<string>{
					ApplicationFacade.RENDER_TU,
					ApplicationFacade.TU_GENERATED,
					ApplicationFacade.EDIT_TEMPLATE,
					ApplicationFacade.TEMPLATE_SAVED
				};
        }

        public void handleNotification(INotification note)
        {
            switch (note.GetName())
            {
                case ApplicationFacade.RENDER_TU:
                    HideAll();
                    applicationComponent.vwStack.selectedChild = applicationComponent.tuRenderer;
                    break;

                case ApplicationFacade.EDIT_TEMPLATE:
                case ApplicationFacade.TEMPLATE_SAVED:
                    applicationComponent.vwStack.selectedChild = applicationComponent.templateEditor;
                    applicationComponent.currentState = "withoutShop";
                    applicationComponent.parent.stage.focus = applicationComponent.templateEditor;
                    break;

                case ApplicationFacade.TU_GENERATED:
                    applicationComponent.currentState = "withShop";
                    break;
            }
        }

        private void HideAll()
        {
            applicationComponent.tuRenderer.visible = false;
            applicationComponent.templateEditor.visible = false;
        }

        private Application applicationComponent
        {
            get
            {
                return (Application)ViewComponent;
            }
        }
    }
}
