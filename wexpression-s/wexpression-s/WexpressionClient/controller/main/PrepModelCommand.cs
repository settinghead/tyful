// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 3/28/12 3:00 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
using Com.Settinghead.Wexpression.Client.Model;
using System;
using System.Collections;
using System.ComponentModel;
using System.IO;
using System.Runtime.CompilerServices;
namespace Com.Settinghead.Wexpression.Client.Controller.Main
{
    public class PrepModelCommand : SimpleCommand
    {

        private LoadupMonitorProxy monitor;
        /// <summary>
        /// Prepare the Model.
        /// </summary>
        ///
        public void execute(INotification note)
        {
            facade.registerProxy(new LoadupMonitorProxy());
            monitor = facade.retrieveProxy(LoadupMonitorProxy.NAME) as LoadupMonitorProxy;
            // Create Template Proxy, 
            TemplateProxy templateProxy = new TemplateProxy();
            TuProxy tuProxy = new TuProxy();
            ShopProxy shopProxy = new ShopProxy();
            WordListProxy wordListProxy = new WordListProxy();

            // register it
            facade.registerProxy(templateProxy);
            facade.registerProxy(tuProxy);
            facade.registerProxy(shopProxy);
            facade.registerProxy(wordListProxy);

            LoadupResourceProxy rTemplate = registerResourceProxy(TemplateProxy.SRNAME, templateProxy);
            LoadupResourceProxy rTu = registerResourceProxy(TuProxy.SRNAME, tuProxy);
            LoadupResourceProxy rShop = registerResourceProxy(ShopProxy.SRNAME, shopProxy);
            LoadupResourceProxy rWordList = registerResourceProxy(WordListProxy.SRNAME, wordListProxy);

            rTu.requires = new List() { rWordList, rTemplate };
            rShop.requires = new List() { rTu };
        }

        private LoadupResourceProxy registerResourceProxy(String srName, ILoadupProxy px)
        {
            LoadupResourceProxy rProxy = new LoadupResourceProxy(srName, px);
            facade.registerProxy(rProxy);
            monitor.addResource(rProxy);
            return rProxy;

        }
    }
}
