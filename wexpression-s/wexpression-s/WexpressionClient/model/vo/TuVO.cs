// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 3/28/12 3:01 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
using Com.Settinghead.Wexpression.Client;
using Com.Settinghead.Wexpression.Client.Model.Vo.Template;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Media.Imaging;

namespace Com.Settinghead.Wexpression.Client.Model.Vo
{
    public class TuVO
    {

        private TemplateVO _template;
        private WordListVO _words;
        private IList<DisplayWordVO> _dWords = new List<DisplayWordVO>();
        private WriteableBitmap _bgImg = null;
        private uint _backgroundColor = 0xffffff;
        private String _bgMode;
        private uint _width, _height;
        //		private bool failedLastVar;

        //the generated image
        private WriteableBitmap _generatedImage = null;

        private const string SOLID_COLOR = "solidColor";
        private int _currentWordIndex = -1;
        private IList<EngineWordVO> _eWords = new List<EngineWordVO>();

        public int indexOffset = 0;


        public TuVO(TemplateVO template, WordListVO words)
        {
            this._template = template;
            this._width = template.width;
            this._height = template.height;

            this._words = WordSorterAndScaler.SortAndScale(words);

        }

        public IList<EngineWordVO> eWords
        {
            get
            {
                return this._eWords;
            }
        }

        public void PushEngineWord(EngineWordVO eWord)
        {
            this._eWords.Push(eWord);
        }

        public IList<DisplayWordVO> dWords
        {
            get
            {
                return _dWords;
            }
        }

        public TemplateVO template
        {
            get
            {
                return _template;
            }
        }

        public int backgroundColor
        {
            set
            {
                this.backgroundColor = value;
                this._bgMode = SOLID_COLOR;
            }
        }

        public uint width
        {
            get
            {
                return this.template.width;
            }
        }

        public uint height
        {
            get
            {
                return this.template.height;
            }
        }

        public WordListVO words
        {
            get
            {
                return _words;
            }
        }

        private bool _finishedDisplayWordRendering = false;
        public bool finishedDisplayWordRendering
        {
            get
            {
                return this._finishedDisplayWordRendering;
            }
            set
            {
                this._finishedDisplayWordRendering = value;
            }
        }

        public WordVO GetNextWordAndIncrement()
        {
            return words.itemAt(++_currentWordIndex % words.size) as WordVO;
        }

        public int currentWordIndex
        {
            get
            {
                return _currentWordIndex;
            }
        }


        public bool failedLast
        {
            get
            {
                return this.failedLast;
            }
        }


        //		[Bindable] private double successCount = 0, totalCount:double = 0;
        //		public function get lossRate():double{
        //			return 1- (successCount)/(totalCount);
        ////			return 0;
        //		}


        public WriteableBitmap generatedImage
        {
            get
            {
                return this._generatedImage;
            }
            set
            {
                this._generatedImage = value;
            }
        }



    }

}
