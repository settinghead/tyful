<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			    creationComplete="application1_creationCompleteHandler(event)"
			   >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.settinghead.groffle.client.model.vo.EngineWordVO;
			import com.settinghead.groffle.client.model.vo.template.TemplateVO;
			import com.settinghead.groffle.client.model.vo.template.WordLayer;
			import flash.filters.DropShadowFilter;

			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			private var template:TemplateVO;
			private var textField:TextField;
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				 template  = new TemplateVO();
				var l:WordLayer = new WordLayer("layer0", template);
				l.path = "templates/heart.png" ;
				l.loadLayerFromPNG(layerLoadFinished);
			}
			
			private function layerLoadFinished(e:Event = null):void{
				img.width = (template.layers[0] as WordLayer).direction.width;
				img.height = (template.layers[0] as WordLayer).direction.height;
				img.graphics.beginBitmapFill((template.layers[0] as WordLayer).direction);

				img.graphics.drawRect(0,0, img.width, img.height);
				img.graphics.endFill();
				var text:String = "typography";
				
				textField = new TextField();
				var style:StyleSheet = new StyleSheet();
				style.parseCSS("div{font-size: 100px; font-family: Arial; text-align: center; }");
				textField.styleSheet = style;
				textField.text = "typography";
				textField.styleSheet = style;
				textField.autoSize = TextFieldAutoSize.LEFT;
				textField.background = false;
				textField.selectable = false;
//				textField.embedFonts = true;
				textField.cacheAsBitmap = false;
				textField.x = 0;
				textField.y = 0;
				textField.antiAliasType = AntiAliasType.ADVANCED;
				textField.filters = [new DropShadowFilter(0.5,45,0,1.0,0.5,0.5) ];
				textField.textColor = 0xcccccc;
				textField.htmlText = "<div>"+text+"</div>";

				img.addChild(textField);
				
				this.addEventListener(MouseEvent.MOUSE_MOVE, application1_mouseMoveHandler);
			}
			
			protected function application1_mouseMoveHandler(event:MouseEvent):void
			{
				textField.x = mouseX - img.x - textField.width/2;
				textField.y = mouseY - img.y - textField.height / 2;
				lblMouseIndicator.text = mouseX.toString() + ", " + mouseY.toString();
				lblIndicator.text = (template.layers[0] as WordLayer).contains(textField.x,textField.y, textField.width, textField.height, 0, false).toString();
			}
			
		]]>
	</fx:Script>
	<s:Group>
		<s:layout>
			<s:VerticalLayout>
			</s:VerticalLayout>
		</s:layout>
		<s:Group>
			<s:layout>
				<s:HorizontalLayout />
			</s:layout>
			<s:Label id="lblIndicator" />
			<s:Label id="lblMouseIndicator" />
			
		</s:Group>
		<s:Group id="canvasArea">
		<mx:UIComponent id="img" />			
		</s:Group>
	</s:Group>
		
</s:Application>
