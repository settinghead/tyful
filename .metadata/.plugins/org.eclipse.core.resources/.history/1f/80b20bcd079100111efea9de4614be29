package com.settinghead.wexpression.wordlist;

import java.nio.charset.Charset;
import java.security.Principal;
import java.util.List;

import javax.inject.Inject;
import javax.inject.Provider;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.scheduling.annotation.Async;
import org.springframework.social.connect.Connection;
import org.springframework.social.connect.ConnectionRepository;
import org.springframework.social.facebook.api.Facebook;
import org.springframework.social.facebook.api.Post;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.social.twitter.api.Twitter;

import com.settinghead.wexpression.HomeController;
import com.settinghead.wexpression.account.Account;
import com.settinghead.wexpression.account.AccountRepository;
import com.settinghead.wexpression.facebook.FacebookPostRepository;

import cue.lang.Counter;
import cue.lang.WordIterator;
import cue.lang.stop.StopWords;

@Controller
@RequestMapping("/wordlists/**")
public class WordListController {
	private WordListRepository wordListRepository;
	@Inject
	private FacebookWordListGenerator fbWordListGenerator;
	@Autowired
	public void setWordListRepository(WordListRepository repo) {
		this.wordListRepository = repo;
	}

	@RequestMapping(value = "/{wordListId}", method = RequestMethod.GET, produces = { MediaType.APPLICATION_JSON_VALUE })
	@ResponseBody
	public WordList getWordList(@PathVariable String wordListId) {
		return this.wordListRepository.getWordList(wordListId);
	}
	@Inject
	private ConnectionRepository connectionRepository;
	
	private final Provider<ConnectionRepository> connectionRepositoryProvider;

	@Inject
	private AccountRepository accountRepository;

	@Inject
	public WordListController(
			Provider<ConnectionRepository> connectionRepositoryProvider) {
		this.connectionRepositoryProvider = connectionRepositoryProvider;
	}


	private Facebook getFacebook() {
		Connection<Facebook> connection = connectionRepository
				.findPrimaryConnection(Facebook.class);
		return connection.getApi();
	}

	private Twitter getTwitter() {
		Connection<Twitter> connection = connectionRepository
				.findPrimaryConnection(Twitter.class);
		return connection.getApi();
	}



	@RequestMapping(value = "/facebook", method = RequestMethod.GET, produces = { MediaType.APPLICATION_JSON_VALUE })
	@ResponseBody
	public String facebook(Principal currentUser, Model model) {
		fbWordListGenerator.generateFacebookList(currentUser);
		return "ok";
	}

	

	@RequestMapping(value = "/", method = RequestMethod.GET, produces = { MediaType.APPLICATION_JSON_VALUE })
	@ResponseBody
	public String home(Principal currentUser, Model model) {
		Account account = accountRepository.findAccountByUsername(currentUser
				.getName());
		wordListRepository.getListOfListIdsByUserId(account.getId());
		return String.valueOf(account.getId());

	}


}
