// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: template.proto

#ifndef PROTOBUF_template_2eproto__INCLUDED
#define PROTOBUF_template_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace setitnghead {
namespace tyful {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_template_2eproto();
void protobuf_AssignDesc_template_2eproto();
void protobuf_ShutdownFile_template_2eproto();

class Image;
class Png;
class Layer;
class Template;

// ===================================================================

class Image : public ::google::protobuf::Message {
 public:
  Image();
  virtual ~Image();
  
  Image(const Image& from);
  
  inline Image& operator=(const Image& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Image& default_instance();
  
  void Swap(Image* other);
  
  // implements Message ----------------------------------------------
  
  Image* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Image& from);
  void MergeFrom(const Image& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);
  
  // required int32 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);
  
  // required bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  
  // @@protoc_insertion_point(class_scope:com.setitnghead.tyful.Image)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::std::string* data_;
  static const ::std::string _default_data_;
  friend void  protobuf_AddDesc_template_2eproto();
  friend void protobuf_AssignDesc_template_2eproto();
  friend void protobuf_ShutdownFile_template_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Image* default_instance_;
};
// -------------------------------------------------------------------

class Png : public ::google::protobuf::Message {
 public:
  Png();
  virtual ~Png();
  
  Png(const Png& from);
  
  inline Png& operator=(const Png& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Png& default_instance();
  
  void Swap(Png* other);
  
  // implements Message ----------------------------------------------
  
  Png* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Png& from);
  void MergeFrom(const Png& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::int32 length() const;
  inline void set_length(::google::protobuf::int32 value);
  
  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  
  // @@protoc_insertion_point(class_scope:com.setitnghead.tyful.Png)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 length_;
  ::std::string* data_;
  static const ::std::string _default_data_;
  friend void  protobuf_AddDesc_template_2eproto();
  friend void protobuf_AssignDesc_template_2eproto();
  friend void protobuf_ShutdownFile_template_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Png* default_instance_;
};
// -------------------------------------------------------------------

class Layer : public ::google::protobuf::Message {
 public:
  Layer();
  virtual ~Layer();
  
  Layer(const Layer& from);
  
  inline Layer& operator=(const Layer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Layer& default_instance();
  
  void Swap(Layer* other);
  
  // implements Message ----------------------------------------------
  
  Layer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Layer& from);
  void MergeFrom(const Layer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .com.setitnghead.tyful.Image direction = 1;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 1;
  inline const ::com::setitnghead::tyful::Image& direction() const;
  inline ::com::setitnghead::tyful::Image* mutable_direction();
  
  // required .com.setitnghead.tyful.Image color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline const ::com::setitnghead::tyful::Image& color() const;
  inline ::com::setitnghead::tyful::Image* mutable_color();
  
  // optional string id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  
  // optional double directionTolerance = 4;
  inline bool has_directiontolerance() const;
  inline void clear_directiontolerance();
  static const int kDirectionToleranceFieldNumber = 4;
  inline double directiontolerance() const;
  inline void set_directiontolerance(double value);
  
  // optional double colorTolerance = 5;
  inline bool has_colortolerance() const;
  inline void clear_colortolerance();
  static const int kColorToleranceFieldNumber = 5;
  inline double colortolerance() const;
  inline void set_colortolerance(double value);
  
  // @@protoc_insertion_point(class_scope:com.setitnghead.tyful.Layer)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::com::setitnghead::tyful::Image* direction_;
  ::com::setitnghead::tyful::Image* color_;
  ::std::string* id_;
  static const ::std::string _default_id_;
  double directiontolerance_;
  double colortolerance_;
  friend void  protobuf_AddDesc_template_2eproto();
  friend void protobuf_AssignDesc_template_2eproto();
  friend void protobuf_ShutdownFile_template_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Layer* default_instance_;
};
// -------------------------------------------------------------------

class Template : public ::google::protobuf::Message {
 public:
  Template();
  virtual ~Template();
  
  Template(const Template& from);
  
  inline Template& operator=(const Template& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Template& default_instance();
  
  void Swap(Template* other);
  
  // implements Message ----------------------------------------------
  
  Template* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Template& from);
  void MergeFrom(const Template& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .com.setitnghead.tyful.Layer layer = 1;
  inline int layer_size() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline const ::com::setitnghead::tyful::Layer& layer(int index) const;
  inline ::com::setitnghead::tyful::Layer* mutable_layer(int index);
  inline ::com::setitnghead::tyful::Layer* add_layer();
  inline const ::google::protobuf::RepeatedPtrField< ::com::setitnghead::tyful::Layer >&
      layer() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::setitnghead::tyful::Layer >*
      mutable_layer();
  
  // optional .com.setitnghead.tyful.Png preview = 2;
  inline bool has_preview() const;
  inline void clear_preview();
  static const int kPreviewFieldNumber = 2;
  inline const ::com::setitnghead::tyful::Png& preview() const;
  inline ::com::setitnghead::tyful::Png* mutable_preview();
  
  // optional int32 dilligence = 3;
  inline bool has_dilligence() const;
  inline void clear_dilligence();
  static const int kDilligenceFieldNumber = 3;
  inline ::google::protobuf::int32 dilligence() const;
  inline void set_dilligence(::google::protobuf::int32 value);
  
  // optional int32 perseverance = 4;
  inline bool has_perseverance() const;
  inline void clear_perseverance();
  static const int kPerseveranceFieldNumber = 4;
  inline ::google::protobuf::int32 perseverance() const;
  inline void set_perseverance(::google::protobuf::int32 value);
  
  // optional int32 minBoxSize = 5;
  inline bool has_minboxsize() const;
  inline void clear_minboxsize();
  static const int kMinBoxSizeFieldNumber = 5;
  inline ::google::protobuf::int32 minboxsize() const;
  inline void set_minboxsize(::google::protobuf::int32 value);
  
  // optional double sampleDistance = 6;
  inline bool has_sampledistance() const;
  inline void clear_sampledistance();
  static const int kSampleDistanceFieldNumber = 6;
  inline double sampledistance() const;
  inline void set_sampledistance(double value);
  
  // optional double minFontSize = 7;
  inline bool has_minfontsize() const;
  inline void clear_minfontsize();
  static const int kMinFontSizeFieldNumber = 7;
  inline double minfontsize() const;
  inline void set_minfontsize(double value);
  
  // optional double maxFontSize = 8;
  inline bool has_maxfontsize() const;
  inline void clear_maxfontsize();
  static const int kMaxFontSizeFieldNumber = 8;
  inline double maxfontsize() const;
  inline void set_maxfontsize(double value);
  
  // optional int32 numberOfSizeReductionSteps = 9;
  inline bool has_numberofsizereductionsteps() const;
  inline void clear_numberofsizereductionsteps();
  static const int kNumberOfSizeReductionStepsFieldNumber = 9;
  inline ::google::protobuf::int32 numberofsizereductionsteps() const;
  inline void set_numberofsizereductionsteps(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.setitnghead.tyful.Template)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::com::setitnghead::tyful::Layer > layer_;
  ::com::setitnghead::tyful::Png* preview_;
  ::google::protobuf::int32 dilligence_;
  ::google::protobuf::int32 perseverance_;
  ::google::protobuf::int32 minboxsize_;
  double sampledistance_;
  double minfontsize_;
  double maxfontsize_;
  ::google::protobuf::int32 numberofsizereductionsteps_;
  friend void  protobuf_AddDesc_template_2eproto();
  friend void protobuf_AssignDesc_template_2eproto();
  friend void protobuf_ShutdownFile_template_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Template* default_instance_;
};
// ===================================================================


// ===================================================================

// Image

// required int32 width = 1;
inline bool Image::has_width() const {
  return _has_bit(0);
}
inline void Image::clear_width() {
  width_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Image::width() const {
  return width_;
}
inline void Image::set_width(::google::protobuf::int32 value) {
  _set_bit(0);
  width_ = value;
}

// required int32 height = 2;
inline bool Image::has_height() const {
  return _has_bit(1);
}
inline void Image::clear_height() {
  height_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 Image::height() const {
  return height_;
}
inline void Image::set_height(::google::protobuf::int32 value) {
  _set_bit(1);
  height_ = value;
}

// required bytes data = 3;
inline bool Image::has_data() const {
  return _has_bit(2);
}
inline void Image::clear_data() {
  if (data_ != &_default_data_) {
    data_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& Image::data() const {
  return *data_;
}
inline void Image::set_data(const ::std::string& value) {
  _set_bit(2);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Image::set_data(const char* value) {
  _set_bit(2);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Image::set_data(const void* value, size_t size) {
  _set_bit(2);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Image::mutable_data() {
  _set_bit(2);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  return data_;
}

// -------------------------------------------------------------------

// Png

// required int32 length = 1;
inline bool Png::has_length() const {
  return _has_bit(0);
}
inline void Png::clear_length() {
  length_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Png::length() const {
  return length_;
}
inline void Png::set_length(::google::protobuf::int32 value) {
  _set_bit(0);
  length_ = value;
}

// required bytes data = 2;
inline bool Png::has_data() const {
  return _has_bit(1);
}
inline void Png::clear_data() {
  if (data_ != &_default_data_) {
    data_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& Png::data() const {
  return *data_;
}
inline void Png::set_data(const ::std::string& value) {
  _set_bit(1);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Png::set_data(const char* value) {
  _set_bit(1);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Png::set_data(const void* value, size_t size) {
  _set_bit(1);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Png::mutable_data() {
  _set_bit(1);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  return data_;
}

// -------------------------------------------------------------------

// Layer

// required .com.setitnghead.tyful.Image direction = 1;
inline bool Layer::has_direction() const {
  return _has_bit(0);
}
inline void Layer::clear_direction() {
  if (direction_ != NULL) direction_->::com::setitnghead::tyful::Image::Clear();
  _clear_bit(0);
}
inline const ::com::setitnghead::tyful::Image& Layer::direction() const {
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::com::setitnghead::tyful::Image* Layer::mutable_direction() {
  _set_bit(0);
  if (direction_ == NULL) direction_ = new ::com::setitnghead::tyful::Image;
  return direction_;
}

// required .com.setitnghead.tyful.Image color = 2;
inline bool Layer::has_color() const {
  return _has_bit(1);
}
inline void Layer::clear_color() {
  if (color_ != NULL) color_->::com::setitnghead::tyful::Image::Clear();
  _clear_bit(1);
}
inline const ::com::setitnghead::tyful::Image& Layer::color() const {
  return color_ != NULL ? *color_ : *default_instance_->color_;
}
inline ::com::setitnghead::tyful::Image* Layer::mutable_color() {
  _set_bit(1);
  if (color_ == NULL) color_ = new ::com::setitnghead::tyful::Image;
  return color_;
}

// optional string id = 3;
inline bool Layer::has_id() const {
  return _has_bit(2);
}
inline void Layer::clear_id() {
  if (id_ != &_default_id_) {
    id_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& Layer::id() const {
  return *id_;
}
inline void Layer::set_id(const ::std::string& value) {
  _set_bit(2);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Layer::set_id(const char* value) {
  _set_bit(2);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Layer::set_id(const char* value, size_t size) {
  _set_bit(2);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Layer::mutable_id() {
  _set_bit(2);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  return id_;
}

// optional double directionTolerance = 4;
inline bool Layer::has_directiontolerance() const {
  return _has_bit(3);
}
inline void Layer::clear_directiontolerance() {
  directiontolerance_ = 0;
  _clear_bit(3);
}
inline double Layer::directiontolerance() const {
  return directiontolerance_;
}
inline void Layer::set_directiontolerance(double value) {
  _set_bit(3);
  directiontolerance_ = value;
}

// optional double colorTolerance = 5;
inline bool Layer::has_colortolerance() const {
  return _has_bit(4);
}
inline void Layer::clear_colortolerance() {
  colortolerance_ = 0;
  _clear_bit(4);
}
inline double Layer::colortolerance() const {
  return colortolerance_;
}
inline void Layer::set_colortolerance(double value) {
  _set_bit(4);
  colortolerance_ = value;
}

// -------------------------------------------------------------------

// Template

// repeated .com.setitnghead.tyful.Layer layer = 1;
inline int Template::layer_size() const {
  return layer_.size();
}
inline void Template::clear_layer() {
  layer_.Clear();
}
inline const ::com::setitnghead::tyful::Layer& Template::layer(int index) const {
  return layer_.Get(index);
}
inline ::com::setitnghead::tyful::Layer* Template::mutable_layer(int index) {
  return layer_.Mutable(index);
}
inline ::com::setitnghead::tyful::Layer* Template::add_layer() {
  return layer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::setitnghead::tyful::Layer >&
Template::layer() const {
  return layer_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::setitnghead::tyful::Layer >*
Template::mutable_layer() {
  return &layer_;
}

// optional .com.setitnghead.tyful.Png preview = 2;
inline bool Template::has_preview() const {
  return _has_bit(1);
}
inline void Template::clear_preview() {
  if (preview_ != NULL) preview_->::com::setitnghead::tyful::Png::Clear();
  _clear_bit(1);
}
inline const ::com::setitnghead::tyful::Png& Template::preview() const {
  return preview_ != NULL ? *preview_ : *default_instance_->preview_;
}
inline ::com::setitnghead::tyful::Png* Template::mutable_preview() {
  _set_bit(1);
  if (preview_ == NULL) preview_ = new ::com::setitnghead::tyful::Png;
  return preview_;
}

// optional int32 dilligence = 3;
inline bool Template::has_dilligence() const {
  return _has_bit(2);
}
inline void Template::clear_dilligence() {
  dilligence_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 Template::dilligence() const {
  return dilligence_;
}
inline void Template::set_dilligence(::google::protobuf::int32 value) {
  _set_bit(2);
  dilligence_ = value;
}

// optional int32 perseverance = 4;
inline bool Template::has_perseverance() const {
  return _has_bit(3);
}
inline void Template::clear_perseverance() {
  perseverance_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 Template::perseverance() const {
  return perseverance_;
}
inline void Template::set_perseverance(::google::protobuf::int32 value) {
  _set_bit(3);
  perseverance_ = value;
}

// optional int32 minBoxSize = 5;
inline bool Template::has_minboxsize() const {
  return _has_bit(4);
}
inline void Template::clear_minboxsize() {
  minboxsize_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 Template::minboxsize() const {
  return minboxsize_;
}
inline void Template::set_minboxsize(::google::protobuf::int32 value) {
  _set_bit(4);
  minboxsize_ = value;
}

// optional double sampleDistance = 6;
inline bool Template::has_sampledistance() const {
  return _has_bit(5);
}
inline void Template::clear_sampledistance() {
  sampledistance_ = 0;
  _clear_bit(5);
}
inline double Template::sampledistance() const {
  return sampledistance_;
}
inline void Template::set_sampledistance(double value) {
  _set_bit(5);
  sampledistance_ = value;
}

// optional double minFontSize = 7;
inline bool Template::has_minfontsize() const {
  return _has_bit(6);
}
inline void Template::clear_minfontsize() {
  minfontsize_ = 0;
  _clear_bit(6);
}
inline double Template::minfontsize() const {
  return minfontsize_;
}
inline void Template::set_minfontsize(double value) {
  _set_bit(6);
  minfontsize_ = value;
}

// optional double maxFontSize = 8;
inline bool Template::has_maxfontsize() const {
  return _has_bit(7);
}
inline void Template::clear_maxfontsize() {
  maxfontsize_ = 0;
  _clear_bit(7);
}
inline double Template::maxfontsize() const {
  return maxfontsize_;
}
inline void Template::set_maxfontsize(double value) {
  _set_bit(7);
  maxfontsize_ = value;
}

// optional int32 numberOfSizeReductionSteps = 9;
inline bool Template::has_numberofsizereductionsteps() const {
  return _has_bit(8);
}
inline void Template::clear_numberofsizereductionsteps() {
  numberofsizereductionsteps_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 Template::numberofsizereductionsteps() const {
  return numberofsizereductionsteps_;
}
inline void Template::set_numberofsizereductionsteps(::google::protobuf::int32 value) {
  _set_bit(8);
  numberofsizereductionsteps_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tyful
}  // namespace setitnghead
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_template_2eproto__INCLUDED
